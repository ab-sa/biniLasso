% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biniLasso.R
\name{opt_cuts_finder}
\alias{opt_cuts_finder}
\title{Optimal cut-points finder based on biniLasso method}
\usage{
opt_cuts_finder(
  x,
  y,
  method = "biniLasso",
  family = "cox",
  lasso_rule = "1se",
  lasso_nfolds = 10,
  penalty.factor = NULL,
  cols,
  x_cuts
)
}
\arguments{
\item{x}{input matrix, of dimension nobs x nvars; each row is an observation vector. Can be in sparse matrix format (inherit from class "sparseMatrix" as in package Matrix). Requirement: nvars >1; in other words, x should have 2 or more columns.}

\item{y}{response variable. Quantitative for family="gaussian", or family="poisson" (non-negative counts). For family="binomial" should be either a factor with two levels, or a two-column matrix of counts or proportions (the second column is treated as the target class; for a factor, the last level in alphabetical order is the target class). For family="multinomial", can be a nc>=2 level factor, or a matrix with nc columns of counts or proportions. For either "binomial" or "multinomial", if y is presented as a vector, it will be coerced into a factor. For family="cox", preferably a Surv object from the survival package: see Details section for more information. For family="mgaussian", y is a matrix of quantitative responses.}

\item{method}{either "biniLasso" or its sparse version "Sparse biniLasso" based on unilasso method. See Safari et al. (2025) for more details.}

\item{family}{any glmnet family option is available.}

\item{lasso_rule}{Lasso rule for finding optimal lambda; either "1se" (default) or "min".}

\item{lasso_nfolds}{The number of lambda values - default is 10.}

\item{penalty.factor}{Separate penalty factors can be applied to each coefficient. This is a number that multiplies lasso lambda to allow differential shrinkage. Can be 0 for some variables, which implies no shrinkage, and that variable is always included in the model. Default is 1 for all variables . Also, any penalty.factor that is set to inf is converted to an exclude, and then internally reset to 1. Note: the penalty factors are internally rescaled to sum to nvars, and the lasso lambda sequence will reflect this change.}

\item{cols}{a vector of numeric column names (characters).}

\item{x_cuts}{a list of cut-points corresponding to each entry of cols and in the same order.}
}
\value{
a list of optimal cut-points corresponding to the columns in cols and in the same order.
}
\description{
Optimal cut-points finder based on biniLasso method
}
\examples{

simData <- data.frame(t = rexp(1000),
                      event = rbinom(1000, 1, 0.6),
                      x1 = rnorm(1000),
                      x2 = rnorm(1000),
                      x3 = rnorm(1000))

simData_converted_1 <-
  num_to_cat(data = simData,
             cols = c("x1", "x2", "x3"),
             method = "quantile",
             n_bins = 30)

opt_cuts_finder(x = simData_converted_1$x,
                y = survival::Surv(simData$t, simData$event),
                method = "biniLasso",
                family = "cox",
                lasso_rule = "1se",
                lasso_nfolds = 10,
                penalty.factor = NULL,
                cols = c("x1", "x2", "x3"),
                x_cuts = simData_converted_1$x_cuts)


}
